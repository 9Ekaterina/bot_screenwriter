import logging
import telebot
# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ–∞–∏–ª GPT –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–∞–ø—Ä–æ—Å–∞
from Gpt_3 import GPT
# –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è –∫–Ω–æ–ø–æ—á–µ–∫
from telebot.types import ReplyKeyboardMarkup, KeyboardButton, Message
from config_3 import TOKEN
import json
import sqlite3

# –ï—Å–ª–∏ –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –Ω–µ—Ç —Ñ–∞–π–ª–∞ db.sqlite -
# –æ–Ω –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω; –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–æ –∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
# –ï—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –º–µ—Ç–æ–¥ connect –ø—Ä–æ—Å—Ç–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—Å—è –∫ –±–∞–∑–µ
con = sqlite3.connect('sqlite_story.db', check_same_thread=False)

# –°–æ–∑–¥–∞—ë–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç cursor –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ë–î
# –í—Å—è –¥–∞–ª—å–Ω–µ–π—à–∞—è —Ä–∞–±–æ—Ç–∞ –±—É–¥–µ—Ç –≤–µ—Å—Ç–∏—Å—å —á–µ—Ä–µ–∑ –º–µ—Ç–æ–¥—ã —ç—Ç–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞: cur
cur = con.cursor()

# –ó–î–ï–°–¨ –ë–£–î–ï–¢ –ü–†–û–ò–°–•–û–î–ò–¢–¨ –°–ê–ú–ê –†–ê–ë–û–¢–ê –° –ë–ê–ó–û–ô: –û–¢–ü–†–ê–í–ö–ê –ó–ê–ü–†–û–°–û–í, –ü–û–õ–£–ß–ï–ù–ò–ï –û–¢–í–ï–¢–û–í
# –ì–æ—Ç–æ–≤–∏–º SQL-–∑–∞–ø—Ä–æ—Å
# –î–ª—è —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏ –∑–∞–ø—Ä–æ—Å –æ–±—Ä–∞–º–ª—ë–Ω –≤ —Ç—Ä–æ–π–Ω—ã–µ –∫–∞–≤—ã—á–∫–∏ –∏ —Ä–∞–∑–±–∏—Ç –ø–æ—Å—Ç—Ä–æ—á–Ω–æ
query = '''
CREATE TABLE IF NOT EXISTS user_story(
    user_id INTEGER PRIMARY KEY,
    genre TEXT,
    character TEXT,
    setting TEXT,
    user_request TEXT,
    story TEXT
);
'''
cur.execute(query)
con.commit()

# –ø–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫
gpt = GPT(system_content="–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ä–∞—Å—Å–∫–∞–∑")

# –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å –ª–æ–≥–∞–º–∏ –æ—à–∏–±–æ–∫
ERROR_LOG_FILE = 'error.log'

# —Ç–æ–∫–µ–Ω
bot = telebot.TeleBot(TOKEN)

CONTENT_TYPES = ["text", "audio", "document", "photo", "sticker", "video", "video_note", "voice", "location", "contact",
                 "new_chat_members", "left_chat_member", "new_chat_title", "new_chat_photo", "delete_chat_photo",
                 "group_chat_created", "supergroup_chat_created", "channel_chat_created", "migrate_to_chat_id",
                 "migrate_from_chat_id", "pinned_message"]

command_type = ""

# –ö–Ω–æ–ø–æ—á–∫–∞
markup = ReplyKeyboardMarkup(resize_keyboard=True)
markup.add(KeyboardButton('/help'))


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /debug
@bot.message_handler(commands=['debug'])
def handle_debug(message):
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª —Å –ª–æ–≥–∞–º–∏ –æ—à–∏–±–æ–∫
    with open(ERROR_LOG_FILE, 'rb') as file:
        bot.send_document(message.chat.id, file)


# –ø–∏—à–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É /start
@bot.message_handler(commands=['start'])
def repeat_message(message):
    bot.send_message(message.chat.id, text=f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}, —è –±–æ—Ç —Å–æ—á–∏–Ω–∏—Ç–µ–ª—å\n"
                                           "–ü–æ–º–æ–≥—É –ø–æ–º–æ—á—å –Ω–∞–ø–∏—Å–∞—Ç—å —Ä–∞—Å—Å–∫–∞–∑\n"
                                           "–ß—Ç–æ–±—ã –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –∫–æ–º–∞–Ω–¥–∞–º–∏ –Ω–∞–ø–∏—à–∏ /help\n", reply_markup=markup)
    user_id_session = message.from_user.id
    print(user_id_session)
    cur = con.cursor()

    query = f'SELECT user_id FROM user_story WHERE user_id = {user_id_session}'
    print(query)
    results = cur.execute(query).fetchone()
    if results is None:
        query = f"INSERT INTO user_story VALUES ({user_id_session}, '', '','','','', '')"
        con.execute(query)
        print(query)
        con.commit()
    else:
        print('–≠—Ç–∞ —Å–µ—Å—Å–∏—è —É–∂–µ –µ—Å—Ç—å')
        query = f"select * from user_story WHERE user_id = {user_id_session}"
        results = cur.execute(query).fetchone()
        print(results)
        i = 0
        set_of_items = ("user_id_session", "user_genre", "user_pol", "user_character", "user_setting", "user_request", "story")
        for result in results:
            if set_of_items[i] == "user_genre":
                user_genre = results[i]
            if set_of_items[i] == "user_pol":
                user_pol = results[i]
            elif set_of_items[i] == "user_character":
                user_character = results[i]
            elif set_of_items[i] == "user_setting":
                user_setting = results[i]
            elif set_of_items[i] == "user_request":
                user_request = results[i]
            elif set_of_items[i] == "story":
                story = results[i]
            i += 1


# –ø–∏—à–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É /help
@bot.message_handler(commands=['help'])
def help_message(message):
    # –∫–Ω–æ–ø–æ—á–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø—Ä–µ–¥–º–µ—Ç–∞
    button_1 = telebot.types.KeyboardButton("/genre")
    bot.send_message(message.chat.id, text="–î–ª—è —Ç–æ–≥–æ —á—Ç–æ –±—ã –Ω–∞—á–∞—Ç—å\n"
                                           "–ñ–º–∏ –Ω–∞ –∫–Ω–æ–ø–æ—á–∫–∏ –∏ –≤—ã–±–∏—Ä–∞–π\n"
                                           "/genre - –Ω–∞—á–∞—Ç—å\n",
                     reply_markup=telebot.types.ReplyKeyboardMarkup().add(button_1))


@bot.message_handler(commands=['genre'])
def genre (message):
    global command_type
    command_type = "genre"
    button_2 = telebot.types.KeyboardButton("–°–∫–∞–∑–∫–∞")
    button_3 = telebot.types.KeyboardButton("–ö–æ–º–µ–¥–∏—è")
    button_4 = telebot.types.KeyboardButton("–§–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞")
    button_5 = telebot.types.KeyboardButton("–£–∂–∞—Å—Ç–∏–∫–∏")

    bot.send_message(message.chat.id, text="–í–±–µ—Ä–∏ –∂–∞–Ω—Ä —Ä–∞—Å—Å–∫–∞–∑–∞:\n"
                                           "1)–°–∫–∞–∑–∫–∞\n"
                                           "2)–ö–æ–º–µ–¥–∏—è\n"
                                           "3)–§–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞\n"
                                           "4)–£–∂–∞—Å—Ç–∏–∫–∏\n",
                     reply_markup=telebot.types.ReplyKeyboardMarkup().add(button_2, button_3, button_4, button_5,))

@bot.message_handler(commands=['character'])
def character (message):
    global command_type
    command_type = "character"
    button_18 = telebot.types.KeyboardButton("–î–æ–∫—Ç–æ—Ä –°—Ç—Ä–µ–Ω—á")
    button_19 = telebot.types.KeyboardButton("–ì–µ—Ä–º–∏–æ–Ω–∞ –ì—Ä–µ–π–Ω–¥–∂–µ—Ä")
    button_20 = telebot.types.KeyboardButton("–Æ–ª–∏–π (–¢—Ä–∏ –ë–æ–≥–∞—Ç—ã—Ä—è)")
    button_21 = telebot.types.KeyboardButton("–ó–æ–ª—É—à–∫–∞")
    bot.send_message(message.chat.id, text="–í—ã–±–µ—Ä–∏  –ø–µ—Ä—Å–æ–Ω–∞–∂–∞:\n"
                                           "1) –î–æ–∫—Ç–æ—Ä –°—Ç—Ä–µ–Ω—á\n"
                                           "2) –ì–µ—Ä–º–∏–æ–Ω–∞ –ì—Ä–µ–π–Ω–¥–∂–µ—Ä\n"
                                           "3) –Æ–ª–∏–π (–¢—Ä–∏ –ë–æ–≥–∞—Ç—ã—Ä—è)\n"
                                           "4) –ó–æ–ª—É—à–∫–∞\n"
                                            "–¢–æ–ª—å–∫–æ —Ç–∏—Ö–æ, —á—Ç–æ –±—ã –Ω–∏–∫—Ç–æ –Ω–µ –∑–∞–º–µ—Ç–∏–ª, —Ç—ã –º–æ–∂–µ—à—å –Ω–∞–ø–∏—Å–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ—Ç—É –≤ —Å–ø–∏—Å–∫–µ ü§´.–ï—Å–ª–∏ —á—Ç–æ —è —Ç–µ–±–µ –Ω–∏—á–µ–≥–æ –Ω–µ –≥–æ–≤–æ—Ä–∏–ª)\n",

                     reply_markup=telebot.types.ReplyKeyboardMarkup().add(button_18, button_19,button_20, button_21))

@bot.message_handler(commands=['setting'])
def setting (message):
    global command_type
    command_type = "setting"
    button_18 = telebot.types.KeyboardButton("–í –≥–æ—Ä–æ–¥–µ")
    button_19 = telebot.types.KeyboardButton("–í –≤–æ–ª—à–µ–±–Ω–æ–º –ª–µ—Å—É")
    button_20 = telebot.types.KeyboardButton("–í –∑–∞–±—Ä–æ—à–µ–Ω–æ–º –∑–∞–¥–∏–Ω–∏–∏")
    button_21 = telebot.types.KeyboardButton("–í —à–∫–æ–ª–µ")
    bot.send_message(message.chat.id, text="–í—ã–±–µ—Ä–∏ —Å–µ—Ç—Ç–∏–Ω–≥ (–ª–æ–∫–∞—Ü–∏—é –≥–¥–µ –±—É–¥—É—Ç –≥–ª–∞–≤–Ω—ã–π –≥–µ—Ä–æ–π –Ω–∞—à–µ–≥–æ —Ä–∞—Å—Å–∫–∞–∑–∞):\n"
                                           "1) –í –≥–æ—Ä–æ–¥–µ - –≥–µ—Ä–æ–π –±—É–¥–µ—Ç –≥—É–ª—è—Ç—å –ø–æ –≥–æ—Ä–æ–¥—É...\n"
                                           "2) –í –≤–æ–ª—à–µ–±–Ω–æ–º –ª–µ—Å—É - –≥–µ—Ä–æ–π –ø–æ–ø–∞–¥–µ—Ç –≤ –≤–æ–ª—à–µ–±–Ω—ã–π –ª–µ—Å\n"
                                           "3)–í –∑–∞–±—Ä–æ—à–µ–Ω–Ω–æ–º –∑–¥–∞–Ω–∏–∏ - –≥–µ—Ä–æ–π –æ–∫–∞–∂–µ—Ç—Å—è –≤ –∑–∞–±—Ä–æ—à–µ–Ω–Ω–æ–º –∑–¥–∞–Ω–∏–∏\n"
                                           "4) –í —à–∫–æ–ª–µ - –Ω–∞—à –≥–µ—Ä–æ–π –∑–∞—Ö–æ—á–µ—Ç –ø–æ—É—á–∏—Ç—å—Å—è –≤ —à–∫–æ–ª–µ \n"
                                            ,

                     reply_markup=telebot.types.ReplyKeyboardMarkup().add(button_18, button_19,button_20, button_21))


@bot.message_handler(commands=['do_it'])
def do_it(message):
    bot.send_message(message.chat.id, f"–ë—ã–ª –≤—ã–±—Ä–∞–Ω —Ç–∞–∫–æ–π –∂–∞–Ω—Ä: {user_genre}")
    bot.send_message(message.chat.id, f"–ë—ã–ª –≤—ã–±—Ä–∞–Ω —Ç–∞–∫–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞: {user_character}")
    bot.send_message(message.chat.id, f"–ë—ã–ª –≤—ã–±—Ä–∞–Ω —Ç–∞–∫–æ–π —Å–µ—Ç—Ç–∏–Ω–≥: {user_setting}")
    user_request = (
        f"–ù–∞–ø–∏—à–∏ —Ç–µ–∫—Å—Ç –Ω–∞ —Ä—É—Å—Å–∫–æ–º —Å –∂–∞–Ω—Ä–æ–º {user_genre} —Å –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–º {user_character} –¥–µ–π—Å–≤–∏–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç {user_setting}.")
    bot.send_message(message.chat.id, f"{user_request}")
    bot.send_message(message.chat.id, text="–ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –ø—Ä–æ–≤–µ—Ä–∏—à—å –Ω–∞–ø–∏—à–∏ /solve_task")
    # –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤—ã–±–æ—Ä –¥–∞–Ω–Ω–æ–π –≤ –±–∞–∑—É
    user_id_session = message.from_user.id
    cur = con.cursor()
    query = f'''
                               UPDATE user_story SET setting = "{str(user_setting)}" WHERE user_id = {user_id_session};
                            '''
    print(query)
    cur.execute(query)
    con.commit()
    query = f'SELECT * FROM user_story WHERE user_id = {user_id_session}'
    results = cur.execute(query).fetchone()
    print(results)



@bot.message_handler(commands=['solve_task'])
def solve_task(message):
    global  user_id_session, user_genre, user_character, user_setting,  user_request, command_type
    json = gpt.make_promt(f"–ù–∞–ø–∏—à–∏ —Ç–µ–∫—Å—Ç –Ω–∞ —Ä—É—Å—Å–∫–æ–º —Å –∂–∞–Ω—Ä–æ–º {user_genre} —Å –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–º {user_character} –¥–µ–π—Å–≤–∏–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç {user_setting}.")
    bot.send_message(message.chat.id, "–£—à—ë–ª –¥—É–º–∞—Ç—å...")

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞
    resp = gpt.send_request(json)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–≤–µ—Ç –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–æ–∫ –∏ –ø–∞—Ä—Å–∏–º –µ–≥–æ
    response = gpt.process_resp(resp)
    if not response[0]:
        bot.send_message(message.chat.id, "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å...")

        # –í—ã–≤–æ–¥–∏–º –æ—Ç–≤–µ—Ç –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
    bot.send_message(message.chat.id, response[1])
    # –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç –¥–∞–Ω–Ω–æ–π –≤ –±–∞–∑—É
    try:
        cur = con.cursor()
        query = f'''
                   UPDATE user_sessions SET gpt_responce = "{str(response[1])}" WHERE user_id = {user_id_session};
                '''
        print(query)
        cur.execute(query)
        con.commit()
    except:
        cur = con.cursor()
        query = f'''
                           UPDATE user_sessions SET gpt_responce = "–û—Ç–≤–µ—Ç –æ—Ç –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ —Å–æ–¥–µ—Ä–∂–∞–ª –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã" WHERE user_id = {user_id_session};
                        '''
        print(query)
        cur.execute(query)
        con.commit()
    query = f'SELECT * FROM user_sessions WHERE user_id = {user_id_session}'
    results = cur.execute(query).fetchone()
    print(results)
    return


@bot.message_handler(content_types=CONTENT_TYPES)
def mess_engine(message):
    global  user_id_session, user_genre, user_character, user_setting,  user_request, command_type
    # print(command_type)
    if message.content_type != ("text"):
        bot.send_message(message.chat.id, "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–º–µ–Ω–Ω–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
        bot.send_message(message.chat.id,
                         f"–ú—ã –æ—Å—Ç–∞–Ω–æ–≤–∏–ª–∏—Å—å –Ω–∞ –∫–æ–º–∞–Ω–¥–µ /{command_type}. –ï—Å–ª–∏ —Ä–µ—à–∏—à—å –ø—Ä–æ–¥–æ–ª–∂–∂–∏—Ç—å, –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏ –Ω–∞ –∫–æ–º–∞–Ω–¥—É!")
        return mess_engine
    else:

        if command_type == ("genre"):
            bot.send_message(message.chat.id, "–°–µ–π—á–∞—Å –º—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /genre")
            user_genre = message.text
            # user_text = message.text
            bot.send_message(message.chat.id, f"–ë—ã–ª –≤—ã–±—Ä–∞–Ω —Ç–∞–∫–æ–π –∂–∞–Ω—Ä: {user_genre}")
            print(user_genre)
            bot.send_message(message.chat.id, text="–ï—Å–ª–∏ –æ–ø—Ä–µ–¥–µ–ª–∏–ª—Å—è —Å –∂–∞–Ω—Ä–º, –Ω–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É /character")
            command_type = ""
            # –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤—ã–±–æ—Ä –¥–∞–Ω–Ω–æ–π –≤ –±–∞–∑—É
            user_id_session = message.from_user.id
            cur = con.cursor()
            query = f'''
               UPDATE user_story SET genre = "{str(user_genre)}" WHERE user_id = {user_id_session};
            '''
            print(query)
            cur.execute(query)
            con.commit()
            query = f'SELECT * FROM user_story WHERE user_id = {user_id_session}'
            results = cur.execute(query).fetchone()
            print(results)

            # cur.execute(f"update user_sessions set items = {str(user_item)} where user_id = {user_id_session}")


        elif command_type == ("character"):
            bot.send_message(message.chat.id, "–°–µ–π—á–∞—Å –º—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /character")
            user_character = message.text
            bot.send_message(message.chat.id, f"–ë—ã–ª –≤—ã–±—Ä–∞–Ω —Ç–∞–∫–æ–π –∂–∞–Ω—Ä: {user_genre}")
            bot.send_message(message.chat.id, f"–ë—ã–ª –≤—ã–±—Ä–∞–Ω —Ç–∞–∫–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞: {user_character}")
            print(user_character)
            bot.send_message(message.chat.id, text="–ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –≤—ã–±–µ—Ä–µ—à—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –Ω–∞–ø–∏—à–∏ /setting")
            command_type = ""

            # –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤—ã–±–æ—Ä –¥–∞–Ω–Ω–æ–π –≤ –±–∞–∑—É
            user_id_session = message.from_user.id
            cur = con.cursor()
            query = f'''
                       UPDATE user_story SET character = "{str(user_character)}" WHERE user_id = {user_id_session};
                    '''
            print(query)
            cur.execute(query)
            con.commit()
            query = f'SELECT * FROM user_story WHERE user_id = {user_id_session}'
            results = cur.execute(query).fetchone()
            print(results)

        elif command_type == ("setting"):
            bot.send_message(message.chat.id, "–°–µ–π—á–∞—Å –º—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /setting")
            user_setting = message.text
            bot.send_message(message.chat.id, f"–ë—ã–ª –≤—ã–±—Ä–∞–Ω —Ç–∞–∫–æ–π –∂–∞–Ω—Ä: {user_genre}")
            bot.send_message(message.chat.id, f"–ë—ã–ª –≤—ã–±—Ä–∞–Ω —Ç–∞–∫–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞: {user_character}")
            bot.send_message(message.chat.id, f"–ë—ã–ª –≤—ã–±—Ä–∞–Ω —Ç–∞–∫–æ–π —Å–µ—Ç—Ç–∏–Ω–≥: {user_setting}")
            print(user_character)
            bot.send_message(message.chat.id, text="–ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –≤—ã–±–µ—Ä–µ—à—å —Å–ª–æ–∂–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—à–∏ /do_it")
            command_type = ""

            # –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤—ã–±–æ—Ä –¥–∞–Ω–Ω–æ–π –≤ –±–∞–∑—É
            user_id_session = message.from_user.id
            cur = con.cursor()
            query = f'''
                            UPDATE user_story SET setting = "{str(user_setting)}" WHERE user_id = {user_id_session};
                         '''
            print(query)
            cur.execute(query)
            con.commit()
            query = f'SELECT * FROM user_story WHERE user_id = {user_id_session}'
            results = cur.execute(query).fetchone()
            print(results)

        else:
            bot.send_message(message.chat.id, f"–Ø –≤—Å–µ–≥–¥–∞ –Ω–µ –ø—Ä–æ—Ç–∏–≤ –ø—Ä–æ—Å—Ç–æ –ø–æ–±–æ–ª—Ç–∞—Ç—å. –ë—É–¥—É –ø–æ–ø—É–≥–∞–µ–º: {message.text}")
            bot.send_message(message.chat.id, "–ï—Å–ª–∏ —Ä–µ—à–∏—à—å –∑–∞—Å—Ç–∞–≤–∏—Ç—å –Ω–µ–π—Ä–æ—Å–µ—Ç—å –¥—É–º–∞—Ç—å –∑–∞ —Ç–µ–±—è, –∫–æ–º–∞–Ω–¥—É–π /genre")

    #cur.close()

# –î–æ–±–∞–≤–ª—è–µ–º –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è


bot.polling()
